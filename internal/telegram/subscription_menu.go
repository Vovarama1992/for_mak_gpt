package telegram

import (
	"context"
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// CheckSubscriptionAndShowMenu ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
func (app *BotApp) CheckSubscriptionAndShowMenu(ctx context.Context, botID string, telegramID int64) {
	log.Printf("[CheckSubscriptionAndShowMenu] start: bot_id=%s, telegram_id=%d", botID, telegramID)

	app.mu.RLock()
	bot := app.bots[botID]
	app.mu.RUnlock()

	if bot == nil {
		log.Printf("[CheckSubscriptionAndShowMenu] bot not found for id: %s", botID)
		return
	}

	status, err := app.SubscriptionService.GetStatus(ctx, botID, telegramID)
	if err != nil {
		log.Printf("[CheckSubscriptionAndShowMenu] get status error: %v", err)
		return
	}

	switch status {
	case "active":
		bot.Send(tgbotapi.NewMessage(telegramID, "‚úÖ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞. –ë–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ üöß"))
		return
	case "pending":
		bot.Send(tgbotapi.NewMessage(telegramID, "‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è."))
		return
	default:
		menu := NewMenu()
		msg := &tgbotapi.Message{Chat: &tgbotapi.Chat{ID: telegramID}}
		log.Printf("[CheckSubscriptionAndShowMenu] showing tariff menu for user %d via %s", telegramID, botID)
		menu.ShowTariffs(ctx, botID, bot, msg, app.TariffService)
	}
}
